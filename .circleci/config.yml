version: 2.1
orbs:
  build-tools: circleci/build-tools@2.9.1
  azure-aks: circleci/azure-aks@0.3.0
  kubernetes: circleci/kubernetes@0.4.0
jobs:
  build:
   executor: azure-aks/default
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
      - image: circleci/php:7.2-node-browsers
    environment:
      #VERSION_NUMBER: 0.0.0.<< pipeline.TestVar >>
      PROJECT_NAME: ${PROJECTNAME}
  #  context: TestCICD
    steps:
      - checkout
      - run:
         name: "Setup custom environment variables"
         command: |
            echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run:
          name: "Environment Variable"
          command: |
            echo ${CIRCLE_BRANCH}
            echo $CIRCLE_BRANCH
            echo ${MY_ENV_VAR}
            echo ${PROJECTNAME}
            echo $Version
            echo $pipeline.number
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run: find .
      - run: dotnet restore
      - run: dotnet build
      #- run: dotnet test --no-build Test.CICDFlow.Tests
      - run: dotnet test  --collect:"XPlat Code Coverage" -v m -r ~/reports/
      - run:
          name: Build for Release
          command: |
            dotnet publish ./Test.CICDFlow/Test.CICDFlow.csproj -c Release -p:UseAppHost=false -o ../app-publish
            cd ../app-publish
            echo $VERSION_NUMBER
            echo  pipeline.number 
      - store_artifacts:
           path: ../app-publish
           destination: bin
      - store_artifacts:
           path: ~/reports
           destination: reports
      - store_test_results:
           path: ~/reports
      - persist_to_workspace: # store the built files into the workspace for other jobs.
          root: ../
          paths:
            - app-publish
            - reports
  test-cluster:
    executor: azure-aks/default
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    steps:
      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          perform-login: true
          resource-group: << parameters.resource-group >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

deploy:
    docker:
      - image: mcr.microsoft.com/azure-cli:latest
    environment:
      VERSION_NUMBER: 0.0.0.1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Azure Staging Deploy
          command: |
            cd /tmp/workspace
            ls -l
