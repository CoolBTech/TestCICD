version: 2
orbs:
  build-tools: circleci/build-tools@2.9.1
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1
      - image: circleci/php:7.2-node-browsers
    environment:
      VERSION_NUMBER: 0.0.0.<< pipeline.TestVar >>
      PROJECT_NAME: ${PROJECTNAME}
    steps:
      - checkout
      - run:
         name: "Setup custom environment variables"
         command: |
            echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      # Run another step, the same as above; note that you can
      # invoke environment variable without curly braces.
      - run:
          name: "What branch am I on now?"
          command: echo $CIRCLE_BRANCH
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
      - run:
          name: "Print an env var stored in the Project"
          command: echo ${PROJECTNAME}
      - run:
          name: "Print an env var stored in a Context"
          command: echo ${Version}
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run: find .
      - run: dotnet restore
      - run: dotnet build
      - run: dotnet test --no-build Test.CICDFlow
      - run:
          name: Build for Release
          command: |
            dotnet publish ./Test.CICDFlow/Test.CICDFlow.csproj -c Release -p:UseAppHost=false -o ../app-publish
            cd ../app-publish
            echo $VERSION_NUMBER
            echo  pipeline.number 
      - run:
          name: Compress Artifacts
          command: |
            tar -cvzf myartifact.tar ../app-publish
      - store_artifacts: 
           path: myartifact.tar
           destination: ${PROJECTNAME}
deploy:
    docker:
      - image: mcr.microsoft.com/azure-cli:latest
    environment:
      VERSION_NUMBER: 0.0.0.1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Azure Staging Deploy
          command: |
            cd /tmp/workspace
            ls -l
